pipeline {
    agent any 
     tools{
         jdk 'jdk17'
         nodejs 'node16'
     }
     environment {
        SCANNER_HOME=tool 'sonar-scanner'
        docker_image_name = "raja4"
        docker_image_tag = "v1.0.0"
        container_name="raja4" 
    } 
    stages{
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('checkout'){
            steps{
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Ravitejasetti/Netflix-clone.git']])
            }
        }
        stage('sonarqube analysis'){
            steps{
                withSonarQubeEnv('sonar-scanner') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=netflix \
                    -Dsonar.projectKey=netflix '''
                    
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('depency check'){
            steps{
                dependencyCheck additionalArguments: '', odcInstallation: 'Dp-check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
    }
    post {
     always {
         emailext body: '''"Project: ${env.JOB_NAME}<br/>" +
                "Build Number: ${env.BUILD_NUMBER}<br/>" +
                "URL: ${env.BUILD_URL}<br/>"''', subject: 'this is the project build trigger result', to: 'raviteja.setti@gmail.com'
        }
    }
}
